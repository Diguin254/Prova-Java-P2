/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package app;

import controller.InterfaceController;
import dto.InterfaceDTO;
import java.awt.Frame;
import java.util.List;
import java.sql.*;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alenc
 */
public abstract class Listagem<Tabela extends InterfaceDTO> extends JDialog {

    /**
     * Creates new form Listagem
     */
    
    private List<Tabela> listaObjetos;
    private InterfaceController controller;
    
    public Listagem(Frame parent, boolean modal, String tituloJanela) {
        super(parent, tituloJanela, modal);
        initComponents();
        setSize(600, 400);
        setLocationRelativeTo(null);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        btnFechar = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        bntDeletar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDados = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnFechar.setText("Fechar");
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });
        jPanel3.add(btnFechar);

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });
        jPanel3.add(btnAtualizar);

        bntDeletar.setText("Deletar");
        bntDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntDeletarActionPerformed(evt);
            }
        });
        jPanel3.add(bntDeletar);

        getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_END);

        tblDados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblDados);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        dispose();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
         int linha = tblDados.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(this, "Selecione um linha para editar.", "Atenção", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            Tabela objeto = listaObjetos.get(linha);
            onEditar(objeto);
            carregarTabela();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao editar: " + e.getMessage(), "Falha", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void bntDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntDeletarActionPerformed
        int linha = tblDados.getSelectedRow();
        if (linha < 0) {
            JOptionPane.showMessageDialog(this, "Selecione uma linha para excluir.", "Atenção", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Tabela objeto = listaObjetos.get(linha);
        String id = getIdObjeto(objeto);
        int confirma = JOptionPane.showConfirmDialog(this, "Confirma exclusão do ID " + id + "?", "Excluir", JOptionPane.YES_NO_OPTION);
        if (confirma != JOptionPane.YES_OPTION) {
            return;
        }
        try {
            onDeletar(objeto);
            carregarTabela();
        } catch (SQLException ex) {
            if("23503".equals(ex.getSQLState())){
                String mensagem = ex.getMessage();
                String tabelaFilho = null;
                int indice = mensagem.indexOf("em \"");
                if(indice >= 0){
                    int inicio = indice + 4;
                    int fim = mensagem.indexOf("\"", inicio);
                    if(fim > inicio) {
                        tabelaFilho = mensagem.substring(inicio, fim);
                    }
                }
                if(tabelaFilho != null) {
                    JOptionPane.showMessageDialog(this, "Não foi possível excluir esse registro pois existem dados em\n" + tabelaFilho + " que ainda o referenciam.\nPor favor, exclua primeiro os registros em '" +tabelaFilho + "'.", "Falha ao excluir", JOptionPane.WARNING_MESSAGE );
                } else {
                    JOptionPane.showMessageDialog(this, "Não foi possível excluir esse registro pois existem dependentes no banco.", "Falha ao excluir", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_bntDeletarActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntDeletar;
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnFechar;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDados;
    // End of variables declaration//GEN-END:variables

    public void carregarTabela() {
        String[] colunas = getColunas();
        DefaultTableModel model = new DefaultTableModel(null, colunas) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        listaObjetos = obterLista();

        if (listaObjetos != null) {
            for (Tabela obj : listaObjetos) {
                Object[] linha = linha(obj);
                model.addRow(linha);
            }
        }
        tblDados.setModel(model);
        tblDados.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
    }
    
    public abstract String[] getColunas();
    public abstract Object[] linha(Tabela objeto);
    public abstract List<Tabela> obterLista();
    public abstract void onEditar(Tabela objeto)throws SQLException;
    public abstract void onDeletar(Tabela objeto)throws SQLException;
    public abstract String getIdObjeto(Tabela objeto);
    
}
