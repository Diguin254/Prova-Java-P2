/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package cadastro;

import app.InterfacePainel;
import dao.CarrinhoDao;
import dto.IngredienteEscolhaDTO;
import dto.InterfaceDTO;
import implementsDao.CarrinhoImplementsDAO;
import java.util.List;
import javax.swing.JOptionPane;
import model.Carrinho;

/**
 *
 * @author alenc
 */
public class PainelIngredienteEscolha extends InterfacePainel {

    /**
     * Creates new form PainelIngredienteEscolha
     */
    private final CarrinhoDao carrinhoDao = new CarrinhoImplementsDAO();
    private List<Carrinho> listaCarrinho;
    IngredienteEscolhaDTO dto;

    public PainelIngredienteEscolha() {
        initComponents();
        carregarComboCarrinho();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Carrinho");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(107, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(127, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables

    private void carregarComboCarrinho() {
        try {
            listaCarrinho = carrinhoDao.listar();
            jComboBox1.removeAllItems();
            jComboBox1.addItem("Selecione");
            for (Carrinho c : listaCarrinho) {
                jComboBox1.addItem(String.valueOf( c.getQntd()));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar carrinho: " + e.getMessage());
        }
    }

    @Override
    public InterfaceDTO getDados() {
        if (dto == null) {
            dto = new IngredienteEscolhaDTO();
        }

        int indice = jComboBox1.getSelectedIndex();
        if (indice > 0 && indice <= listaCarrinho.size()) {
            Carrinho escolhido = listaCarrinho.get(indice - 1);
            dto.idCarrinho = String.valueOf(escolhido.getId());
        } else {
            dto.idCarrinho = null;
        }

        return dto;
    }

    @Override
    public void setDados(InterfaceDTO dto) {
        if (dto != null) {
            this.dto = (IngredienteEscolhaDTO) dto;
        } else {
            this.dto = new IngredienteEscolhaDTO();
        }

        if (listaCarrinho != null && !listaCarrinho.isEmpty() && this.dto.idCarrinho != null) {
            int idC = Integer.parseInt(this.dto.idCarrinho);
            for (int i = 0; i < listaCarrinho.size(); i++) {
                if (listaCarrinho.get(i).getId() == idC) {
                    jComboBox1.setSelectedIndex(i + 1);
                    return;
                }
            }
        }
        jComboBox1.setSelectedIndex(0);
    }
}
