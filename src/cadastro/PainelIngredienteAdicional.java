/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package cadastro;

import app.InterfacePainel;
import dao.IngredienteEscolhaDao;
import dto.IngredienteAdicionalDTO;
import dto.InterfaceDTO;
import implementsDao.IngredienteEscolhaImplementsDAO;
import java.util.List;
import javax.swing.JOptionPane;
import model.IngredienteEscolha;

/**
 *
 * @author alenc
 */
public class PainelIngredienteAdicional extends InterfacePainel {

    /**
     * Creates new form PainelIngredienteAdicional
     */
    private final IngredienteEscolhaDao escolhaDao = new IngredienteEscolhaImplementsDAO();
    private List<IngredienteEscolha> listaEscolha;

    public PainelIngredienteAdicional() {
        initComponents();
        carregarIngrediente();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        comboEscolha = new javax.swing.JComboBox<>();

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Valor");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Nome do Ingrediente");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Ingrediente");

        comboEscolha.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100))))
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(comboEscolha, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboEscolha, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(87, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboEscolha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
    IngredienteAdicionalDTO dto;

    @Override
    public InterfaceDTO getDados() {
        if (dto == null) {
            dto = new IngredienteAdicionalDTO();
        }

        dto.nomeIngrAdc = jTextField2.getText();
        dto.valorIngrAdc = jTextField1.getText().replace(",", ".");

        int indiceEsc = comboEscolha.getSelectedIndex();
        if (indiceEsc > 0 && indiceEsc <= listaEscolha.size()) {
            IngredienteEscolha escolhido = listaEscolha.get(indiceEsc - 1);
            dto.idIngrEsc = String.valueOf(escolhido.getId());
        } else {
            dto.idIngrEsc = null;
        }

        return dto;
    }

    @Override
    public void setDados(InterfaceDTO dto) {
        if (dto != null) {
            this.dto = (IngredienteAdicionalDTO) dto;
            jTextField1.setText(this.dto.nomeIngrAdc);
            jTextField2.setText(this.dto.valorIngrAdc);
        } else {
            this.dto = new IngredienteAdicionalDTO();
            jTextField1.setText("");
            jTextField2.setText("");
        }

        if (listaEscolha != null && !listaEscolha.isEmpty() && this.dto.idIngrEsc != null) {
            int idEsc = Integer.parseInt(this.dto.idIngrEsc);
            for (int i = 0; i < listaEscolha.size(); i++) {
                if (listaEscolha.get(i).getId() == idEsc) {
                    comboEscolha.setSelectedIndex(i + 1);
                    return;
                }
            }
        }
        comboEscolha.setSelectedIndex(0);
    }

    private void carregarIngrediente() {
        try {
            listaEscolha = escolhaDao.listar();
            comboEscolha.removeAllItems();
            comboEscolha.addItem("Selecione");
            for (IngredienteEscolha esc : listaEscolha) {
                comboEscolha.addItem(String.valueOf(esc.getId()));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar Ingrediente: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
}
