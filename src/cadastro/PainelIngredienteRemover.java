/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package cadastro;

import app.InterfacePainel;
import dao.IngredienteEscolhaDao;
import dto.IngredienteRemoverDTO;
import dto.InterfaceDTO;
import implementsDao.IngredienteEscolhaImplementsDAO;
import java.util.List;
import javax.swing.JOptionPane;
import model.IngredienteEscolha;

/**
 *
 * @author alenc
 */
public class PainelIngredienteRemover extends InterfacePainel {

    /**
     * Creates new form PainelIngredienteRemover
     */
    private final IngredienteEscolhaDao ingEscolhaDao = new IngredienteEscolhaImplementsDAO();
    private List<IngredienteEscolha> listaIngredienteEscolha;
    IngredienteRemoverDTO dto;

    public PainelIngredienteRemover() {
        initComponents();
        comboCarregarIngredienteEscolha();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Nome do Ingrediente");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Ingredientes");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(179, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void comboCarregarIngredienteEscolha() {
        try {
            listaIngredienteEscolha = ingEscolhaDao.listar();
            jComboBox1.removeAllItems();
            jComboBox1.addItem("— Selecione —");
            for (IngredienteEscolha ing : listaIngredienteEscolha) {
                jComboBox1.addItem(String.valueOf(ing.toString()));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar ingrediente: " + e.getMessage());
        }
    }

    @Override
    public InterfaceDTO getDados() {
        if (dto == null) {
            dto = new IngredienteRemoverDTO();
        }

        dto.nomeIngrRem = jTextField1.getText();

        int index = jComboBox1.getSelectedIndex();
        if (index > 0 && index <= listaIngredienteEscolha.size()) {
            IngredienteEscolha escolhido = listaIngredienteEscolha.get(index - 1);
            dto.idIngrEsco = String.valueOf(escolhido.getId());
        } else {
            dto.idIngrEsco = null;
        }

        return (InterfaceDTO) dto;
    }

    @Override
    public void setDados(InterfaceDTO dto) {
        this.dto = (IngredienteRemoverDTO) dto;
        jTextField1.setText(this.dto.nomeIngrRem);

        if (listaIngredienteEscolha != null && !listaIngredienteEscolha.isEmpty() && this.dto.idIngrEsco != null) {
            int id = Integer.parseInt(this.dto.idIngrEsco);
            for (int i = 0; i < listaIngredienteEscolha.size(); i++) {
                if (listaIngredienteEscolha.get(i).getId() == id) {
                    jComboBox1.setSelectedIndex(i + 1);
                    return;
                }
            }
        }
        jComboBox1.setSelectedIndex(0);
    }
}
