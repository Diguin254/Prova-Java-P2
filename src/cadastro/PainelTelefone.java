/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package cadastro;

import app.InterfacePainel;
import dao.ClienteDao;
import dao.FuncionarioDao;
import dto.InterfaceDTO;
import dto.TelefoneDTO;
import implementsDao.ClienteImplementsDAO;
import implementsDao.FuncionarioImplementsDAO;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import model.Cliente;
import model.Funcionario;

/**
 *
 * @author Cliente
 */

public class PainelTelefone extends InterfacePainel {

    /**
     * Creates new form PainelTelefone
     */
    private final ClienteDao clienteDao = new ClienteImplementsDAO();
    private List<Cliente> listaCliente;
    private final FuncionarioDao funcionarioDao = new FuncionarioImplementsDAO();
    private List<Funcionario> listaFuncionario;
    TelefoneDTO dto;

    public PainelTelefone() {
        initComponents();
        carregarComboCliente();
        carregarComboFuncionario();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabelCliente = new javax.swing.JLabel();
        jComboBoxCliente = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxFuncionario = new javax.swing.JComboBox<>();

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DDD");
        jLabel1.setPreferredSize(new java.awt.Dimension(400, 16));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Número do Telefone");
        jLabel2.setPreferredSize(new java.awt.Dimension(400, 16));

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabelCliente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCliente.setText("Cliente");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Funcionario");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 5, Short.MAX_VALUE))
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jComboBoxFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jLabelCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBoxCliente;
    private javax.swing.JComboBox<String> jComboBoxFuncionario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelCliente;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    private void carregarComboCliente() {
        try {
            listaCliente = clienteDao.listar();
            jComboBoxCliente.removeAllItems();

            jComboBoxCliente.addItem("— Selecione —");

            for (Cliente c : listaCliente) {
                jComboBoxCliente.addItem(c.getNome());
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar Clientes: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void carregarComboFuncionario() {
        try {
            listaFuncionario = funcionarioDao.listar();
            jComboBoxFuncionario.removeAllItems();

            jComboBoxFuncionario.addItem("— Selecione —");

            for (Funcionario f : listaFuncionario) {
                jComboBoxFuncionario.addItem(f.getNome());
            }
         }catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar funcionarios: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        
        }
    }
        @Override
        public InterfaceDTO getDados
        
            () {
        if (dto == null) {
                dto = new TelefoneDTO();
            }

            dto.dddTel = jTextField1.getText();
            dto.numTel = jTextField2.getText();

            int index = jComboBoxCliente.getSelectedIndex();
            if (index > 0 && index <= listaCliente.size()) {
                Cliente escolhido = listaCliente.get(index - 1);
                dto.idCliente = String.valueOf(escolhido.getId());
            } else {
                dto.idCliente = null;
            }

            int indexF = jComboBoxFuncionario.getSelectedIndex();
            if (indexF > 0 && indexF <= listaFuncionario.size()) {
                Funcionario escolhido = listaFuncionario.get(indexF - 1);
                dto.idFuncionario = String.valueOf(escolhido.getId());
            } else {
                dto.idFuncionario = null;
            }

            return dto;
        }

        @Override
        public void setDados
        (InterfaceDTO dto
        
            ) {
        this.dto = (TelefoneDTO) dto;
            jTextField1.setText(this.dto.dddTel);
            jTextField2.setText(this.dto.numTel);

            if (listaCliente != null && !listaCliente.isEmpty() && this.dto.idCliente != null) {
                int id = Integer.parseInt(this.dto.idCliente);
                for (int i = 0; i < listaCliente.size(); i++) {
                    if (listaCliente.get(i).getId() == id) {
                        jComboBoxCliente.setSelectedIndex(i + 1);
                        return;
                    }
                }
            }
            jComboBoxCliente.setSelectedIndex(0);
            if (listaFuncionario != null && !listaFuncionario.isEmpty() && this.dto.idFuncionario != null) {
                int id = Integer.parseInt(this.dto.idFuncionario);
                for (int i = 0; i < listaFuncionario.size(); i++) {
                    if (listaFuncionario.get(i).getId() == id) {
                        jComboBoxFuncionario.setSelectedIndex(i + 1);
                        return;
                    }
                }
            }
            jComboBoxFuncionario.setSelectedIndex(0);
        }

    }
