/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package cadastro;

import app.InterfacePainel;
import dao.CartaoDao;
import dao.DinheiroDao;
import dto.InterfaceDTO;
import dto.MetodoPagamentoDTO;
import implementsDao.CartaoImplementsDAO;
import implementsDao.DinheiroImplementsDAO;
import java.util.List;
import javax.swing.JOptionPane;
import model.Dinheiro;
import model.Cartao;

/**
 *
 * @author alenc
 */
public class PainelMetPagamento extends InterfacePainel {

    /**
     * Creates new form PainelMetPagamento
     */
    private final DinheiroDao dinheiroDao = new DinheiroImplementsDAO();
    private List<Dinheiro> listaDinheiro;
    private final CartaoDao cartaoDao = new CartaoImplementsDAO();
    private List<Cartao> listaCartao;
    MetodoPagamentoDTO dto;

    public PainelMetPagamento() {
        initComponents();
        comboCarregarDinheiro();
        comboCarregarBoxCartao();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxDinheiro = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxCartao = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Pix");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Outro metodo de pagamento");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Dinheiro");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Cart√£o");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(jComboBoxDinheiro, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 100, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jComboBoxCartao, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(28, 28, 28)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxDinheiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxCartao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBoxCartao;
    private javax.swing.JComboBox<String> jComboBoxDinheiro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void comboCarregarDinheiro() {
        try {
            listaDinheiro = dinheiroDao.listar();
            jComboBoxDinheiro.removeAllItems();
            for (Dinheiro d : listaDinheiro) {
                jComboBoxDinheiro.addItem(String.valueOf(d.getValorEntregado()));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar dinheiro: " + e.getMessage());
        }
    }

    private void comboCarregarBoxCartao() {
        try {
            listaCartao = cartaoDao.listar();
            jComboBoxDinheiro.removeAllItems();
            for (Cartao c : listaCartao) {
                jComboBoxDinheiro.addItem(String.valueOf(c.getNumeroCartao() + " - " + c.getTipoConta()));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar cartao: " + e.getMessage());
        }
    }

    @Override
    public InterfaceDTO getDados() {
        if (dto == null) {
            dto = new MetodoPagamentoDTO();
        }

        dto.pixPag = jTextField1.getText();

        int indexD = jComboBoxDinheiro.getSelectedIndex();
        if (indexD >= 0 && indexD < listaDinheiro.size()) {
            dto.idDinheiroP = String.valueOf(listaDinheiro.get(indexD).getId());
        }

        int indexC = jComboBoxCartao.getSelectedIndex();
        if (indexC >= 0 && indexC < listaCartao.size()) {
            dto.idCartaoP = String.valueOf(listaCartao.get(indexC).getId());
        }

        return (InterfaceDTO) dto;
    }

    @Override
    public void setDados(InterfaceDTO dto) {
        this.dto = (MetodoPagamentoDTO) dto;
        jTextField1.setText(this.dto.pixPag);

        if (listaDinheiro != null && !listaDinheiro.isEmpty() && this.dto.idDinheiroP != null) {
            int id = Integer.parseInt(this.dto.idDinheiroP);
            for (int i = 0; i < listaDinheiro.size(); i++) {
                if (listaDinheiro.get(i).getId() == id) {
                    jComboBoxDinheiro.setSelectedIndex(i);
                    break;
                }
            }
        }
        
        if (listaCartao != null && !listaCartao.isEmpty() && this.dto.idCartaoP != null) {
            int id = Integer.parseInt(this.dto.idCartaoP);
            for (int i = 0; i < listaCartao.size(); i++) {
                if (listaCartao.get(i).getId() == id) {
                    jComboBoxCartao.setSelectedIndex(i);
                    break;
                }
            }
        }
    }
}
