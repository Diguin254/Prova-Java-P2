/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package cadastro;

import app.InterfacePainel;
import dao.ClienteDao;
import dao.StatusPedidoDao;
import dto.InterfaceDTO;
import dto.PedidoDTO;
import implementsDao.ClienteImplementsDAO;
import implementsDao.StatusPedidoImplementsDAO;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import model.Cliente;
import model.StatusPedido;

/**
 *
 * @author alenc
 */
public class PainelPedido extends InterfacePainel {

    /**
     * Creates new form PainelPedido
     */
    private final ClienteDao clienteDao = new ClienteImplementsDAO();
    private List<Cliente> listaCliente;

    private final StatusPedidoDao statusDao = new StatusPedidoImplementsDAO();
    private List<StatusPedido> listaStatus;
    PedidoDTO dto;

    public PainelPedido() {
        initComponents();
        carregarComboCliente();
        carregarComboStatus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxCliente = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxStatus = new javax.swing.JComboBox<>();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Hora do Pedido");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Numero do Pedido");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Data do Pedido");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Cliente");

        jComboBoxCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Status do Pedido");

        jComboBoxStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField2)
                    .addComponent(jFormattedTextField1)
                    .addComponent(jComboBoxCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxStatus, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void carregarComboCliente() {
        try {
            listaCliente = clienteDao.listar();
            jComboBoxCliente.removeAllItems();
            jComboBoxCliente.addItem("— Selecione —");
            for (Cliente c : listaCliente) {
                jComboBoxCliente.addItem(c.getNome());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar cliente: " + e.getMessage());
        }
    }

    private void carregarComboStatus() {
        try {
            listaStatus = statusDao.listar();
            jComboBoxStatus.removeAllItems();
            jComboBoxStatus.addItem("— Selecione —");
            for (StatusPedido sts : listaStatus) {
                jComboBoxStatus.addItem(sts.getProgresso());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar status: " + e.getMessage());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBoxCliente;
    private javax.swing.JComboBox<String> jComboBoxStatus;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    @Override
    public InterfaceDTO getDados() {
        if (dto == null) {
            dto = new PedidoDTO();
        }

        dto.horaPed = jTextField1.getText();
        dto.nPed = jTextField2.getText();

        Object valorBruto = jFormattedTextField1.getValue();
        if (valorBruto instanceof Date) {
            dto.dataP = (Date) valorBruto;
        } else {
            String texto = jFormattedTextField1.getText().trim();
            if (!texto.isEmpty()) {
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                sdf.setLenient(false);
                try {
                    dto.dataP = sdf.parse(texto);
                } catch (ParseException ex) {
                    dto.dataP = null;
                }
            } else {
                dto.dataP = null;
            }
        }
        
        int idxCli = jComboBoxCliente.getSelectedIndex();
        if(idxCli > 0 && idxCli <= listaCliente.size()){
            Cliente escolhido = listaCliente.get(idxCli - 1);
            dto.idClienteP = String.valueOf(escolhido.getId());
        } else {
            dto.idClienteP = null;
        }
        
        int idxSt = jComboBoxStatus.getSelectedIndex();
        if(idxSt > 0 && idxSt <= listaStatus.size()){
            StatusPedido escolhido = listaStatus.get(idxSt - 1);
            dto.idStatusPed = String.valueOf(escolhido.getId());
        } else {
            dto.idStatusPed = null;
        }
        
        return (InterfaceDTO) dto;
    }

    @Override
    public void setDados(InterfaceDTO interfaceDto) {
        this.dto = (PedidoDTO) interfaceDto;
        jTextField1.setText(this.dto.horaPed);
        jTextField2.setText(this.dto.nPed);
        if (dto.dataP != null) {
            jFormattedTextField1.setValue(dto.dataP);
        } else {
            jFormattedTextField1.setValue(new Date());
        }

        if (listaCliente != null && !listaCliente.isEmpty() && this.dto.idClienteP != null) {
            int idC = Integer.parseInt(this.dto.idClienteP);
            for (int i = 0; i < listaCliente.size(); i++) {
                if (listaCliente.get(i).getId() == idC) {
                    jComboBoxCliente.setSelectedIndex(i);
                    break;
                }
            }
        }

        if (listaStatus != null && !listaStatus.isEmpty() && this.dto.idStatusPed != null) {
            int idC = Integer.parseInt(this.dto.idStatusPed);
            for (int i = 0; i < listaStatus.size(); i++) {
                if (listaStatus.get(i).getId() == idC) {
                    jComboBoxStatus.setSelectedIndex(i);
                    break;
                }
            }
        }
    }
}
