/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package cadastro;

import app.InterfacePainel;
import dao.CupomDao;
import dao.MetodoPagamentoDao;
import dao.PedidoDao;
import dto.InterfaceDTO;
import dto.PagamentoDTO;
import implementsDao.CupomImplementsDAO;
import implementsDao.MetodoPagamentoImplementsDAO;
import implementsDao.PedidoImplementsDAO;
import java.util.List;
import javax.swing.JOptionPane;
import model.Cupom;
import model.MetodoPagamento;
import model.Pedido;

/**
 *
 * @author alenc
 */
public class PainelPagamento extends InterfacePainel {

    /**
     * Creates new form PainelPagamento
     */
    private final MetodoPagamentoDao metPagDao = new MetodoPagamentoImplementsDAO();
    private List<MetodoPagamento> listaMetPag;
    private final CupomDao cupomDao = new CupomImplementsDAO();
    private List<Cupom> listaCupom;
    private final PedidoDao pedidoDao = new PedidoImplementsDAO();
    private List<Pedido> listaPedido;
    PagamentoDTO dto;

    public PainelPagamento() {
        initComponents();
        comboCarregarMetPag();
        comboCarregarCupom();
        comboCarregarPedido();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBoxMetPag = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxCupom = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxPedido = new javax.swing.JComboBox<>();

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Metodo de pagamento");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Cupom");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Pedido");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jComboBoxMetPag, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jComboBoxCupom, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jComboBoxPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxMetPag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxCupom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(117, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBoxCupom;
    private javax.swing.JComboBox<String> jComboBoxMetPag;
    private javax.swing.JComboBox<String> jComboBoxPedido;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables

    private void comboCarregarMetPag() {
        try {
            listaMetPag = metPagDao.listar();
            jComboBoxMetPag.removeAllItems();
            for (MetodoPagamento met : listaMetPag) {
                jComboBoxMetPag.addItem(String.valueOf(met.getCartao()));
                jComboBoxMetPag.addItem(String.valueOf(met.getDinheiro()));
                jComboBoxMetPag.addItem(String.valueOf(met.getPix()));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar metodo de pagamento: " + e.getMessage());
        }
    }

    private void comboCarregarCupom() {
        try {
            listaCupom = cupomDao.listar();
            jComboBoxCupom.removeAllItems();
            for (Cupom c : listaCupom) {
                jComboBoxCupom.addItem(String.valueOf(c.getCodigo() + " - " + c.getValidade() + " - " + c.getValorCupom()));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar cupom: " + e.getMessage());
        }
    }

    private void comboCarregarPedido() {
        try {
            listaPedido = pedidoDao.listar();
            jComboBoxPedido.removeAllItems();
            for (Pedido p : listaPedido) {
                jComboBoxPedido.addItem(String.valueOf(p.getCliente()+ " - " + p.getDataPedido()+ " - " + p.getNumeroPedido()));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar pedido: " + e.getMessage());
        }
    }

    @Override
    public InterfaceDTO getDados() {
        if (dto == null) {
            dto = new PagamentoDTO();
        }

        int indexM = jComboBoxMetPag.getSelectedIndex();
        if (indexM >= 0 && indexM < listaMetPag.size()) {
            dto.idMetPag = String.valueOf(listaMetPag.get(indexM).getId());
        }

        int indexC = jComboBoxCupom.getSelectedIndex();
        if (indexC >= 0 && indexC < listaCupom.size()) {
            dto.idCupomP = String.valueOf(listaCupom.get(indexC).getId());
        }

        int indexP = jComboBoxPedido.getSelectedIndex();
        if (indexP >= 0 && indexP < listaPedido.size()) {
            dto.idPedidoP = String.valueOf(listaPedido.get(indexP).getId());
        }
        
        return (InterfaceDTO) dto;
    }

    @Override
    public void setDados(InterfaceDTO dto) {
        this.dto = (PagamentoDTO) dto;

        if (listaMetPag != null && !listaMetPag.isEmpty() && this.dto.idMetPag != null) {
            int id = Integer.parseInt(this.dto.idMetPag);
            for (int i = 0; i < listaMetPag.size(); i++) {
                if (listaMetPag.get(i).getId() == id) {
                    jComboBoxMetPag.setSelectedIndex(i);
                    break;
                }
            }
        }
        
        if (listaCupom != null && !listaCupom.isEmpty() && this.dto.idCupomP != null) {
            int id = Integer.parseInt(this.dto.idCupomP);
            for (int i = 0; i < listaCupom.size(); i++) {
                if (listaCupom.get(i).getId() == id) {
                    jComboBoxCupom.setSelectedIndex(i);
                    break;
                }
            }
        }
        
        if (listaPedido != null && !listaPedido.isEmpty() && this.dto.idPedidoP != null) {
            int id = Integer.parseInt(this.dto.idPedidoP);
            for (int i = 0; i < listaPedido.size(); i++) {
                if (listaPedido.get(i).getId() == id) {
                    jComboBoxPedido.setSelectedIndex(i);
                    break;
                }
            }
        }
    }
}
