/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package cadastro;

import app.InterfacePainel;
import dao.EnderecoDao;
import dto.InterfaceDTO;
import dto.TaxaEntregaDTO;
import implementsDao.EnderecoImplementsDAO;
import java.util.List;
import javax.swing.JOptionPane;
import model.Endereco;

/**
 *
 * @author alenc
 */
public class PainelTaxaEntrega extends InterfacePainel {

    /**
     * Creates new form PainelTaxaEntrega
     */
    private final EnderecoDao endDao = new EnderecoImplementsDAO();
    private List<Endereco> listaEnd;
    TaxaEntregaDTO dto;

    public PainelTaxaEntrega() {
        initComponents();
        carregarComboEndereco();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Valor da Entrega");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Endere√ßo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(179, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    private void carregarComboEndereco() {
        try {
            listaEnd = endDao.listar();
            jComboBox1.removeAllItems();
            for (Endereco p : listaEnd) {
                jComboBox1.addItem(String.valueOf(p.getRua()));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar pedido: " + e.getMessage());
        }
    }

    @Override
    public InterfaceDTO getDados() {
        if(dto == null){
            dto = new TaxaEntregaDTO();
        }
        dto.valEntrega = jTextField1.getText();
        
        int indexE = jComboBox1.getSelectedIndex();
        if (indexE >= 0 && indexE < listaEnd.size()) {
            dto.idEnd = String.valueOf(listaEnd.get(indexE).getId());
        }
        
        return (InterfaceDTO) dto;
    }

    @Override
    public void setDados(InterfaceDTO dto) {
        this.dto = (TaxaEntregaDTO) dto;
        jTextField1.setText(this.dto.valEntrega);
        
        if (listaEnd != null && !listaEnd.isEmpty() && this.dto.idTaxaEnt != null) {
            int idC = Integer.parseInt(this.dto.idTaxaEnt);
            for (int i = 0; i < listaEnd.size(); i++) {
                if (listaEnd.get(i).getId() == idC) {
                    jComboBox1.setSelectedIndex(i);
                    break;
                }
            }
        }
    }
}
